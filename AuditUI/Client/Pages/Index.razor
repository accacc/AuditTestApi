@page "/"
@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations

@inject IJSRuntime JSRuntime

<h1 class="jumbo" id="myTargetElement">0</h1>


<MudGrid Style="position: fixed;top: 50%;left: 50%;transform: translate(-50%, -50%);">
    <MudItem xs="6">
        <MudPaper Class="d-flex align-center justify-center mud-width-full mud-height-full py-4">
            <MudButton >

                <MudImage Src="https://cdn.dsmcdn.com/seller-center/spm/seller-center-product/assets/add-from-catalog.svg"></MudImage>
                <br />
                From Global Catalog
            </MudButton>
        </MudPaper>
    </MudItem>
    <MudItem xs="6">
        <MudPaper Class="d-flex align-center justify-center mud-width-full mud-height-full py-4">
            <MudButton >
                <MudImage Src="https://cdn.dsmcdn.com/seller-center/spm/seller-center-product/assets/single-product.svg"></MudImage>
                <br />
                Single Product
            </MudButton>
        </MudPaper>
    </MudItem>
    @*<MudItem xs="12">
    <MudPaper Class="d-flex align-center justify-center mud-width-full mud-height-full py-8">

    <ARImage Src="https://cdn.dsmcdn.com/seller-center/spm/seller-center-product/assets/quick-upload.svg"></ARImage>
    <br />
    <MudButton>Import From Excel</MudButton>

    </MudPaper>
    </MudItem>*@
</MudGrid>





@code {
    bool success;
    string[] errors = { };
    MudTextField<string> pwField1;
    MudForm form;
    private Helper helper;
    private IEnumerable<string> PasswordStrength(string pw)
    {
        if (string.IsNullOrWhiteSpace(pw))
        {
            yield return "Password is required!";
            yield break;
        }
        if (pw.Length < 8)
            yield return "Password must be at least of length 8";
        if (!Regex.IsMatch(pw, @"[A-Z]"))
            yield return "Password must contain at least one capital letter";
        if (!Regex.IsMatch(pw, @"[a-z]"))
            yield return "Password must contain at least one lowercase letter";
        if (!Regex.IsMatch(pw, @"[0-9]"))
            yield return "Password must contain at least one digit";
    }

    private string PasswordMatch(string arg)
    {
        if (pwField1.Value != arg)
            return "Passwords don't match";
        return null;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        helper = new Helper(JSRuntime);
        await helper.StartSingleLuckyDrawResult();
        base.OnAfterRenderAsync(firstRender);
    }

    protected  async Task Deneme()
    {
        helper = new Helper(JSRuntime);
        await helper.StartSingleLuckyDrawResult();

    }

}